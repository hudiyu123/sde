#! /usr/bin/env bash

# __START_OF_LICENSE__
# 
# Copyright (c) 2018 Michael D. Adams
# All rights reserved.
# 
# This file is part of the SDE software.
# 
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 3,
# or (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public
# License along with this program; see the file LICENSE.  If not,
# see <http://www.gnu.org/licenses/>.
# 
# __END_OF_LICENSE__

panic()
{
	echo "ERROR: $*"
	exit 1
}

warn()
{
	echo "WARNING: $@"
}

perform_cleanup()
{
	if [ -n "$tmp_dir" -a -d "$tmp_dir" ]; then
		rm -rf "$tmp_dir" || \
		  echo "warning: cannot remove temporary directory $tmp_dir"
	fi
}

usage()
{
	echo "BAD USAGE: $@"
	cat <<- EOF
	usage: $0 -i \$iso_file -d \$install_dir

	Options:
	-i \$iso_file
	    Specify the file containing the ISO installation image.
	-d \$install_dir
	    Set the installation directory to \$install_dir.
	EOF
	exit 2
}

texlive_2023_hack="${TEXLIVE_2023_HACK:-0}"

user=$(whoami) || panic "cannot get user name"
host=$(hostname) || panic "cannot get host name"
cur_dir=$(pwd) || panic "cannot get current directory"

iso_file=
install_dir=
tmp_dir="/tmp/sde_install_texlive_iso-$user@$host-$$"
cleanup=1
paper_size=letter

while getopts Cd:i:p: opt; do
	case "$opt" in
	C)
		cleanup=0;;
	i)
		iso_file="$OPTARG";;
	d)
		install_dir="$OPTARG";;
	p)
		paper_size="$OPTARG";;
	\?)
		usage
		break;;
	esac
done
shift $((OPTIND - 1))

if [ -z "$install_dir" ]; then
	usage "no installation directory specified"
fi
abs_install_dir=$(readlink -f "$install_dir") || \
  panic "cannot canonicalize pathname $install_dir"

if [ -z "$iso_file" ]; then
	usage "no ISO image specified"
fi

tmp_dir=
tmp_dir_template="${SDE_TMPDIR:-/tmp}/sde_install_texlive_iso-$user-XXXXXXXX"

# Set the user file-creation mask to allow read and execute permissions
# for the group and others.
# This will help to increase the likelihood that the installed software
# will be accessible by all users.
umask 022

if [ -d "$abs_install_dir" ]; then
	panic "installation directory already exists"
fi

tmp_dir=$(mktemp -d "$tmp_dir_template") || \
  panic "cannot create temporary directory"
if [ "$cleanup" -ne 0 ]; then
	trap perform_cleanup EXIT
fi

profile="$tmp_dir/profile"
mnt_dir="$tmp_dir/mnt"

for dir in "$mnt_dir"; do
	mkdir -p "$dir" || \
	  panic "cannot make directory $dir"
done

cat > "$profile" <<- EOF
selected_scheme scheme-full
TEXDIR $abs_install_dir
TEXMFSYSCONFIG $abs_install_dir/texmf-config
TEXMFLOCAL $abs_install_dir/texmf-local
TEXMFSYSVAR $abs_install_dir/texmf-var
TEXMFHOME ~/texmf
TEXMFCONFIG ~/.texlive/texmf-config
TEXMFVAR ~/.texlive/texmf-var
binary_x86_64-linux 1
instopt_adjustpath 0
instopt_adjustrepo 1
instopt_portable 0
instopt_write18_restricted 1
tlpdbopt_autobackup 1
tlpdbopt_backupdir tlpkg/backups
tlpdbopt_create_formats 1
tlpdbopt_desktop_integration 0
tlpdbopt_file_assocs 0
tlpdbopt_generate_updmap 0
tlpdbopt_install_docfiles 1
tlpdbopt_install_srcfiles 1
tlpdbopt_post_code 1
tlpdbopt_w32_multi_user 0
EOF
#instopt_letter 1
#TEXDIR $abs_install_dir/$version
#TEXMFCONFIG ~/.texlive$version/texmf-config
#TEXMFSYSCONFIG $abs_install_dir/$version/texmf-config
#TEXMFSYSVAR $abs_install_dir/$version/texmf-var
#TEXMFVAR ~/.texlive$version/texmf-var
#tlpdbopt_sys_bin /usr/local/bin
#tlpdbopt_sys_info /usr/local/share/info
#tlpdbopt_sys_man /usr/local/share/man
if [ "$texlive_2023_hack" -eq 0 ]; then
	if [ -n "$paper_size" ]; then
		case "$paper_size" in
		a4)
			instopt_letter=0;;
		letter)
			instopt_letter=1;;
		*)
			panic "unexpected paper size";;
		esac
		echo "instopt_letter $instopt_letter" >> "$profile" || \
		  panic "cannot modify profile"
	fi
fi

cat <<- EOF
========== START OF PROFILE ==========
$(cat "$profile")
========== END OF PROFILE ==========
EOF

mkdir -p "$abs_install_dir" || \
  panic "cannot make directory $install_dir"

install_opts=()
install_opts+=(-profile "$profile")

fuseiso_program=$(type -P fuseiso) || fuseiso_program=
fusermount_program=$(type -P fusermount) || fusermount_program=
sz_program=$(type -P 7z) || sz_program=
if [ -n "$fuseiso_program" -a -n "$fusermount_program" ]; then
	mode=fuseiso
elif [ -n "$sz_program" ]; then
	mode=7z
else
	mode=""
fi

case "$mode" in
fuseiso)

	"$fuseiso_program" "$iso_file" "$mnt_dir" || \
	  panic "cannot mount ISO filesystem"

	(cd "$mnt_dir" && ./install-tl "${install_opts[@]}") || \
	  panic "installer failed"

	"$fusermount_program" -u "$mnt_dir" || \
	  panic "cannot unmount ISO filesystem"

	;;

7z)

	"$sz_program" x -o"${mnt_dir}" "$iso_file" || \
	  panic "cannot extract ISO image"
	chmod a+x "$mnt_dir/install-tl" || \
	  panic "cannot change permission"
	"$mnt_dir"/install-tl "${install_opts[@]}" || \
	  panic "installer failed"
	rm -rf "$mnt_dir" || \
	  panic "cannot remove temporary files"

	;;

*)
	panic "unsupported installation method"
	;;

esac

texlive_bin_dir="$abs_install_dir/bin"
texlive_arch_dir="$texlive_bin_dir/x86_64-linux"
if [ ! -d "$texlive_arch_dir" ]; then
	panic "expected bin directory is missing"
fi

(cd "$texlive_bin_dir" && ln -s x86_64-linux/* .) || \
  panic "cannot link files"

tlmgr="$texlive_arch_dir/tlmgr"
if [ -n "$paper_size" ]; then
	if [ "$texlive_2023_hack" -ne 0 -a "$paper_size" = letter ]; then
		echo "updating tlmgr"
		"$tlmgr" update --self || panic "cannot update tlmgr"
		echo "setting paper size"
		"$tlmgr" paper letter || panic "cannot set paper size"
	fi
fi

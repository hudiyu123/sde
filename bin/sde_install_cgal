#! /usr/bin/env bash

# __START_OF_LICENSE__
# 
# Copyright (c) 2019 Michael D. Adams
# All rights reserved.
# 
# This file is part of the SDE software.
# 
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 3,
# or (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public
# License along with this program; see the file LICENSE.  If not,
# see <http://www.gnu.org/licenses/>.
# 
# __END_OF_LICENSE__

panic()
{
	echo "ERROR: $@"
	exit 1
}

usage()
{
	echo "BAD USAGE: $@"
	cat <<- EOF
	usage: $0 -d \$install_dir -v \$version

	Options
	=======

	-d \$install_dir
	    Set the installation directory to \$install_dir.
	-v \$version
	    Set the version of CGAL to install to \$version.
	EOF
	exit 2
}

self_path="$(realpath "$0")" || panic "cannot get program path"
self_dir="$(dirname "$self_path")" || panic "cannot get program directory"
sde_validate_url="$self_dir/sde_validate_url"

user=$(whoami) || panic "cannot get user name"
host=$(hostname) || panic "cannot get host name"
cur_dir=$(pwd) || panic "cannot get current directory"

version=
install_dir=

while getopts d:v:h opt; do
	case "$opt" in
	d)
		install_dir="$OPTARG";;
	v)
		version="$OPTARG";;
	h|\?)
		usage
		break;;
	esac
done
shift $((OPTIND - 1))

if [ -z "$install_dir" ]; then
	usage "no installation directory specified"
fi
if [ -z "$version" ]; then
	usage "no version specified"
fi

# Set the user file-creation mask to allow read and execute permissions
# for the group and others.
# This will help to increase the likelihood that the installed software
# will be accessible by all users.
umask 022

tmp_dir="/tmp/sde_install_cgal-$user@$host-$$"
src_dir="$tmp_dir/src"
build_dir="$tmp_dir/build"

archive_urls=()
archive_urls+=("https://github.com/CGAL/cgal/releases/download/v$version/CGAL-$version.tar.xz")
archive_urls+=("https://github.com/CGAL/cgal/releases/download/releases/CGAL-$version/CGAL-$version.tar.xz")
archive_urls+=("https://github.com/CGAL/cgal/archive/releases/CGAL-$version.tar.gz")

archive_url=
for url in "${archive_urls[@]}"; do
	echo "Checking for archive $url"
	"$sde_validate_url" "$url"
	status=$?
	if [ "$status" -eq 0 ]; then
		archive_url="$url"
		break
	fi
done
if [ -z "$archive_url" ]; then
	panic "cannot find archive file"
fi

for dir in "$tmp_dir" "$src_dir" "$build_dir"; do
	mkdir -p "$dir" || \
	  panic "cannot make directory $dir"
done

(cd "$tmp_dir" && wget "$archive_url") || \
  panic "cannot download archive"

archive=$(basename "$archive_url") || \
  panic "cannot get basename of URL"

tar_options=()
case "$archive" in
*.tar.gz)
	tar_options+=(-z);;
*.xz)
	tar_options+=(-J);;
*)
	panic "unknown archive type";;
esac
(cd "$src_dir" && \
  tar -x "${tar_options[@]}" -f "../$archive" --strip-components=1) || \
  panic "cannot extract archive"

cmake_opts=()
#cmake_opts+=("-DCMAKE_BUILD_TYPE=Debug")
cmake -H"$src_dir" -B"$build_dir" -G "Unix Makefiles" \
  -DCMAKE_INSTALL_PREFIX="$install_dir" "${cmake_opts[@]}" || \
  panic "cmake failed"

cmake --build "$build_dir" || panic "cannot build"

cmake --build "$build_dir" --target install || panic "cannot install"

rm -rf "$tmp_dir" || panic "cannot remove temporary directory $tmp_dir"

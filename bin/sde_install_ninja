#! /usr/bin/env bash

# __START_OF_LICENSE__
# 
# Copyright (c) 2023 Michael D. Adams
# All rights reserved.
# 
# This file is part of the SDE software.
# 
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 3,
# or (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public
# License along with this program; see the file LICENSE.  If not,
# see <http://www.gnu.org/licenses/>.
# 
# __END_OF_LICENSE__

panic()
{
	echo "ERROR: $@"
	exit 1
}

isabspath()
{
	case "$1" in
	/*)
		echo "1";;
	*)
		echo "0";;
	esac
}

perform_cleanup()
{
	if [ -n "$tmp_dir" -a -d "$tmp_dir" ]; then
		rm -rf "$tmp_dir" || \
		  echo "warning: cannot remove temporary directory $tmp_dir"
	fi
}

usage()
{
	echo "BAD USAGE: $@"
	cat <<- EOF
	-d \$install_dir
	    Set the installation directory to \$install_dir.
	-v \$version
	    Set the version to install to \$version.
	    (e.g., v1.11.1)
	-n name

	Examples
	========

	$0 -v v1.11.1 -d /tmp/ninja
	EOF
	exit 2
}

tmp_dir=
tmp_dir_template="${SDE_TMPDIR:-/tmp}/sde_install_ninja-XXXXXXXX"

cleanup=1
install_dir=
version=

while getopts Cd:v: opt; do
	case "$opt" in
	C)
		cleanup=0;;
	d)
		install_dir="$OPTARG";;
	v)
		version="$OPTARG";;
	\?)
		usage
		break;;
	esac
done
shift $((OPTIND - 1))

if [ -z "$install_dir" ]; then
	usage "no installation directory specified"
fi

if [ -z "$version" ]; then
	usage "no version specified"
fi

cur_dir="$(pwd)" || panic "cannot get current directory"

abs_install_dir="$install_dir"
result="$(isabspath "$abs_install_dir")" || panic "absolute path test failed"
if [ "$result" -eq 0 ]; then
	abs_install_dir="$cur_dir/$abs_install_dir"
fi

# Set the user file-creation mask to allow read and execute permissions
# for the group and others.
# This will help to increase the likelihood that the installed software
# will be accessible by all users.
umask 022

commit="$version"

tmp_dir=$(mktemp -d "$tmp_dir_template") || \
  panic "cannot create temporary directory"
if [ "$cleanup" -ne 0 ]; then
	trap perform_cleanup EXIT
fi

git_dir="$tmp_dir/git"
build_dir="$tmp_dir/build"

for dir in "$git_dir" "$build_dir"; do
	mkdir -p "$dir" || panic
done

repo_url="https://github.com/ninja-build/ninja.git"

(git clone "$repo_url" "$git_dir") || \
  panic "cannot clone"
(cd "$git_dir" && git checkout "$commit") || panic "cannot checkout"

(cd "$git_dir" && \
  cmake -H. -B"$build_dir" -DCMAKE_INSTALL_PREFIX="$abs_install_dir") || \
  panic "cannot configure"
(cmake --build "$build_dir") || \
  panic "cannot build"
(cmake --build "$build_dir" --target install) || \
  panic "cannot install"

#! /usr/bin/env bash

# __START_OF_LICENSE__
# 
# Copyright (c) 2017, 2018 Michael D. Adams
# All rights reserved.
# 
# This file is part of the SDE software.
# 
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 3,
# or (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public
# License along with this program; see the file LICENSE.  If not,
# see <http://www.gnu.org/licenses/>.
# 
# __END_OF_LICENSE__

panic()
{
	echo "ERROR: $@"
	exit 1
}

validate_url()
{
	local url="$1"
	case "$url" in
	http*)
		wget -S --spider "$url" 2>&1 | grep -q "HTTP/1.1 200 OK"
		;;
	ftp*)
		wget -S --spider "$url" 2>&1 | grep -q -i "exists"
		;;
	*)
		return 2;;
	esac
}

usage()
{
	echo "BAD USAGE: $@"
	cat <<- EOF
	usage: $0 -v \$version -o \$out_file

	Options:
	-v \$version
	    Set the version of the software to obtain to \$version.
	-o \$out_file
	    Set the name of the ISO output file to \$out_file.
	EOF
	exit 2
}

version=
out_file=
historic=1

while getopts co:v:h option; do
	case "$option" in
	h)
		usage;;
	v)
		version="$OPTARG";;
	o)
		out_file="$OPTARG";;
	c)
		historic=0;;
	*)
		usage "bad option $option";;
	esac
done
shift $((OPTIND - 1))

if [ -z "$version" ]; then
	usage "no version specified"
fi
if [ -z "$out_file" ]; then
	usage "no output file specified"
fi

iso_file_names=(
	texlive$version.iso
)
#	texlive.iso

# See: https://ctan.org/mirrors
mirrors=(

	# https
	https://ftp.muug.ca/mirror/ctan
	https://tug.ctan.org/
	https://mirror.csclub.uwaterloo.ca/CTAN/
	https://mirror.its.dal.ca/ctan/
	https://ctan.math.illinois.edu/
	https://ctan.math.utah.edu/ctan/tex-archive/
	https://ctan.math.washington.edu/tex-archive/
	https://ctan.math.washington.edu/tex-archive/

	# ftp
	ftp://tug.ctan.org/tex-archive
	ftp://ctan.math.utah.edu/tex-archive

)

# See: https://tug.org/historic/
historic_archives=(
	https://ftp.tu-chemnitz.de/pub/tug/historic
	https://pi.kwarc.info/historic
	https://ftp.math.utah.edu/pub/tex/historic
)

if [ "$historic" -ne 0 ]; then
	for historic_archive in "${historic_archives[@]}"; do
		urls+=("$historic_archive/systems/texlive/$version")
	done
fi
for mirror in "${mirrors[@]}"; do
	urls+=("$mirror/systems/texlive/Images")
done
for historic_archive in "${historic_archives[@]}"; do
	urls+=("$historic_archive/systems/texlive/$version")
done

out_dir="$(dirname "$out_file")" || \
  panic "cannot get directory of output file"
if [ ! -d "$out_dir" ]; then
	mkdir -p "$out_dir" || \
	  panic "cannot make directory $out_dir"
fi

success=0
for url in "${urls[@]}"; do
	for iso_file_name in "${iso_file_names[@]}"; do
		target="$url/$iso_file_name"
		echo "Checking for existence of $target"
		validate_url "$target"
		status=$?
		if [ "$status" -ne 0 ]; then
			echo "invalid URL $target"
			continue
		fi
		cat <<- EOF
		============================================================
		Attempting download from:
		$target
		EOF
		wget_options=()
		#wget_options+=(--quiet)
		#wget_options+=(--no-verbose)
		wget_options+=(--connect-timeout=30)
		wget_options+=(--read-timeout=300)
		##wget_options+=(--no-http-keep-alive)
		##wget_options+=(--ignore-length)

		#(cd "$tmp_dir" && wget "${wget_options[@]}" "$target")
		wget "${wget_options[@]}" -O "$out_file" "$target"
		status=$?
		echo "wget exit status: $status"
		if [ "$status" -eq 0 ]; then
			success=1
		fi
		if [ "$success" -ne 0 ]; then
			break
		fi
	done
	if [ "$success" -ne 0 ]; then
		break
	fi
done
